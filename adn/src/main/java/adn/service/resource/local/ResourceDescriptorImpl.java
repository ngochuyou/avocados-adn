/**
 * 
 */
package adn.service.resource.local;

import java.io.Serializable;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;

import org.hibernate.property.access.spi.Getter;
import org.hibernate.property.access.spi.Setter;
import org.springframework.util.Assert;

import adn.service.resource.metamodel.EntityTypeImpl;

/**
 * @author Ngoc Huy
 *
 */
public class ResourceDescriptorImpl<T> implements ResourceDescriptor<T> {

	private final String resourceName;
	private final Class<T> type;

	private final Getter idGetter;
	private final Setter idSetter;
	private final boolean isIdAutoGenerated;
	private final AnnotationBasedResourceValueGeneration idGeneration;

	private final ResourceManagerFactory factory;
	private final EntityTypeImpl<T> metamodel;

	private static final Object NULL_VAL = "null";

	/**
	 * @throws SecurityException
	 * @throws NoSuchMethodException
	 * 
	 */
	public ResourceDescriptorImpl(EntityTypeImpl<T> metamodel, ResourceManagerFactory resourceManagerFactory)
			throws IllegalArgumentException, SecurityException, NoSuchMethodException {
		// TODO Auto-generated constructor stub
		Assert.notNull(metamodel, "EntityType cannot be null");
		this.metamodel = metamodel;
		this.type = metamodel.getJavaType();
		this.resourceName = metamodel.getName();
		isIdAutoGenerated = metamodel.getIdValueGeneration() != null;
		this.factory = resourceManagerFactory;
		idGetter = metamodel.getIdGetter();
		idSetter = metamodel.getIdSetter();
		idGeneration = isIdAutoGenerated
				? !(metamodel.getIdValueGeneration() instanceof AnnotationBasedResourceValueGeneration)
						? checkValueGeneration()
						: (AnnotationBasedResourceValueGeneration) metamodel.getIdValueGeneration()
				: null;
	}

	private AnnotationBasedResourceValueGeneration checkValueGeneration() {
		throw new IllegalArgumentException("AnnotationBasedResourceValueGeneration required");
	}

	@Override
	public void setIdentifier(T instance, Serializable identifier) {
		// TODO Auto-generated method stub
		idSetter.set(instance, identifier, null);
	}

	@Override
	public Serializable getIdentifier(T owner) {
		// TODO Auto-generated method stub
		Object identifier = idGetter.get(owner);

		if (identifier instanceof String && String.valueOf(identifier).equals(NULL_VAL)) {
			return null;
		}

		return (Serializable) identifier;
	}

	@Override
	public Class<T> getType() {
		// TODO Auto-generated method stub
		return type;
	}

	@Override
	public Getter getIdentifierGetter() {
		return idGetter;
	}

	@Override
	public Setter getIdentifierSetter() {
		return idSetter;
	}

	@Override
	public boolean isInstance(Class<? extends T> type) {
		// TODO Auto-generated method stub
		return this.type.isAssignableFrom(type);
	}

	@Override
	public boolean isIdentifierAutoGenerated() {
		// TODO Auto-generated method stub
		return isIdAutoGenerated;
	}

	@Override
	public AnnotationBasedResourceValueGeneration getIdentifierValueGeneration() {
		// TODO Auto-generated method stub
		return idGeneration;
	}

	@Override
	public ResourceManagerFactory getResourceManagerFactory() {
		// TODO Auto-generated method stub
		return factory;
	}

	@Override
	public void cleanUp() {
		// TODO Auto-generated method stub
	}

	@Override
	public String getResourceName() {
		// TODO Auto-generated method stub
		return resourceName;
	}

	/**
	 * Final determining level of resource's transience
	 */
	@Override
	public boolean isTransient(T instance) {
		// TODO Auto-generated method stub
		return factory.getStorage().isExists(getIdentifier(instance).toString());
	}

	@Override
	public String toString() {
		// TODO Auto-generated method stub
		// @formatter:off
		return String.format("Descriptor TRACE: \n"
				+ "\t-propertySpan: %s\n"
				+ "\t-propertyNames: [%s]\n"
				+ "\t-propertyIsAutoGenerated: [%s]\n"
				+ "\t-getters: [%s]\n"
				+ "\t-setters: [%s]",
				metamodel.getPropertySpan(),
				metamodel.getAttributes().stream()
					.map(ele -> ele.getName())
					.sorted((l, r) -> Integer.compare(metamodel.getPropertyIndex(l), metamodel.getPropertyIndex(r)))
					.collect(Collectors.joining(", ")),
				IntStream.range(0, metamodel.getPropertySpan()).mapToObj(index -> metamodel.getAutoGeneratedMarkers()[index])
					.map(f -> String.valueOf(f)).collect(Collectors.joining(", ")),
				Stream.of(metamodel.getGetters()).map(getter -> getter.getMethodName()).collect(Collectors.joining(", ")),
				Stream.of(metamodel.getSetters()).map(setter -> setter.getMethodName()).collect(Collectors.joining(", "))
				);
		// @formatter:on
	}

}
